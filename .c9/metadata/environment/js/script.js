{"filter":false,"title":"script.js","tooltip":"/js/script.js","undoManager":{"mark":10,"position":10,"stack":[[{"start":{"row":43,"column":0},"end":{"row":57,"column":1},"action":"remove","lines":["      "," function initMap() {","  var myLatLng = {lat: 36.0544, lng: -112.1401};","","  var map = new google.maps.Map(document.getElementById('map'), {","    zoom: 4,","    center: myLatLng","  ","  });","  ","  var marker = new google.maps.Marker({","    position: myLatLng,","    map: map,","  });","}"],"id":2}],[{"start":{"row":55,"column":6},"end":{"row":135,"column":1},"action":"remove","lines":["  // Create the autocomplete object and associate it with the UI input control.","        // Restrict the search to the default country, and to place type \"cities\".","        autocomplete = new google.maps.places.Autocomplete(","            /** @type {!HTMLInputElement} */ (","                document.getElementById('autocomplete')), {","              types: ['(cities)'],","            });","        ","","        autocomplete.addListener('place_changed', onPlaceChanged);","","        // Add a DOM event listener to react when the user selects a country.","        document.getElementById('usState').addEventListener(","            'change', setAutocompleteusState);","      }","","      // When the user selects a city, get the place details for the city and","      // zoom the map in on the city.","      function onPlaceChanged() {","        var place = autocomplete.getPlace();","        if (place.geometry) {","          map.panTo(place.geometry.location);","          map.setZoom(12);","          search();","        } else {","          document.getElementById('autocomplete').placeholder = 'search';","        }","      }","      ","      function search() {","        var search = {","          bounds: map.getBounds(),","          types: ['lodging']","        };","","        places.nearbySearch(search, function(results, status) {","          if (status === google.maps.places.PlacesServiceStatus.OK) {","            clearResults();","            clearMarkers();","            // Create a marker for each hotel found, and","            // assign a letter of the alphabetic to each marker icon.","            for (var i = 0; i < results.length; i++) {","              var markerLetter = String.fromCharCode('A'.charCodeAt(0) + (i % 26));","              var markerIcon = MARKER_PATH + markerLetter + '.png';","              // Use marker animation to drop the icons incrementally on the map.","              markers[i] = new google.maps.Marker({","                position: results[i].geometry.location,","                animation: google.maps.Animation.DROP,","                icon: markerIcon","              });","              // If the user clicks a hotel marker, show the details of that hotel","              // in an info window.","              markers[i].placeResult = results[i];","              google.maps.event.addListener(markers[i], 'click', showInfoWindow);","              setTimeout(dropMarker(i), i * 100);","              addResult(results[i], i);","            }","          }","        });","      }","","  ","","      // Set the country restriction based on user input.","      // Also center and zoom the map on the given country.","      function setAutocompleteusState() {","        var usState = document.getElementById('usState').value;","        if (usState == 'all') {","          autocomplete.setComponentRestrictions({'usState': []});","          map.setCenter({lat: 15, lng: 0});","          map.setZoom(2);","        } else {","          autocomplete.setComponentRestrictions({'usState': usState});","          map.setCenter(state[usState].center);","          map.setZoom(state[usState].zoom);","        }","        clearResults();","        clearMarkers();","      }",""," "],"id":3}],[{"start":{"row":50,"column":0},"end":{"row":54,"column":0},"action":"remove","lines":["","        infoWindow = new google.maps.InfoWindow({","          content: document.getElementById('info-content')","        });",""],"id":4}],[{"start":{"row":4,"column":6},"end":{"row":5,"column":56},"action":"remove","lines":["var MARKER_PATH = 'https://developers.google.com/maps/documentation/javascript/images/marker_green';","      var hostnameRegexp = new RegExp('^https?://.+?/');"],"id":5}],[{"start":{"row":50,"column":6},"end":{"row":51,"column":0},"action":"insert","lines":["",""],"id":6},{"start":{"row":51,"column":0},"end":{"row":51,"column":6},"action":"insert","lines":["      "]}],[{"start":{"row":51,"column":6},"end":{"row":108,"column":7},"action":"insert","lines":["var input = document.getElementById('pac-input');","        var searchBox = new google.maps.places.SearchBox(input);","        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);","","        // Bias the SearchBox results towards current map's viewport.","        map.addListener('bounds_changed', function() {","          searchBox.setBounds(map.getBounds());","        });","","        var markers = [];","        // Listen for the event fired when the user selects a prediction and retrieve","        // more details for that place.","        searchBox.addListener('places_changed', function() {","          var places = searchBox.getPlaces();","","          if (places.length == 0) {","            return;","          }","","          // Clear out the old markers.","          markers.forEach(function(marker) {","            marker.setMap(null);","          });","          markers = [];","","          // For each place, get the icon, name and location.","          var bounds = new google.maps.LatLngBounds();","          places.forEach(function(place) {","            if (!place.geometry) {","              console.log(\"Returned place contains no geometry\");","              return;","            }","            var icon = {","              url: place.icon,","              size: new google.maps.Size(71, 71),","              origin: new google.maps.Point(0, 0),","              anchor: new google.maps.Point(17, 34),","              scaledSize: new google.maps.Size(25, 25)","            };","","            // Create a marker for each place.","            markers.push(new google.maps.Marker({","              map: map,","              icon: icon,","              title: place.name,","              position: place.geometry.location","            }));","","            if (place.geometry.viewport) {","              // Only geocodes have viewport.","              bounds.union(place.geometry.viewport);","            } else {","              bounds.extend(place.geometry.location);","            }","          });","          map.fitBounds(bounds);","        });","      }"],"id":7}],[{"start":{"row":50,"column":6},"end":{"row":108,"column":7},"action":"remove","lines":["","      var input = document.getElementById('pac-input');","        var searchBox = new google.maps.places.SearchBox(input);","        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);","","        // Bias the SearchBox results towards current map's viewport.","        map.addListener('bounds_changed', function() {","          searchBox.setBounds(map.getBounds());","        });","","        var markers = [];","        // Listen for the event fired when the user selects a prediction and retrieve","        // more details for that place.","        searchBox.addListener('places_changed', function() {","          var places = searchBox.getPlaces();","","          if (places.length == 0) {","            return;","          }","","          // Clear out the old markers.","          markers.forEach(function(marker) {","            marker.setMap(null);","          });","          markers = [];","","          // For each place, get the icon, name and location.","          var bounds = new google.maps.LatLngBounds();","          places.forEach(function(place) {","            if (!place.geometry) {","              console.log(\"Returned place contains no geometry\");","              return;","            }","            var icon = {","              url: place.icon,","              size: new google.maps.Size(71, 71),","              origin: new google.maps.Point(0, 0),","              anchor: new google.maps.Point(17, 34),","              scaledSize: new google.maps.Size(25, 25)","            };","","            // Create a marker for each place.","            markers.push(new google.maps.Marker({","              map: map,","              icon: icon,","              title: place.name,","              position: place.geometry.location","            }));","","            if (place.geometry.viewport) {","              // Only geocodes have viewport.","              bounds.union(place.geometry.viewport);","            } else {","              bounds.extend(place.geometry.location);","            }","          });","          map.fitBounds(bounds);","        });","      }"],"id":8}],[{"start":{"row":48,"column":11},"end":{"row":49,"column":0},"action":"insert","lines":["",""],"id":34},{"start":{"row":49,"column":0},"end":{"row":49,"column":8},"action":"insert","lines":["        "]},{"start":{"row":49,"column":8},"end":{"row":50,"column":0},"action":"insert","lines":["",""]},{"start":{"row":50,"column":0},"end":{"row":50,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":50,"column":8},"end":{"row":128,"column":7},"action":"insert","lines":["  // Create the autocomplete object and associate it with the UI input control.","        // Restrict the search to the default country, and to place type \"cities\".","        autocomplete = new google.maps.places.Autocomplete(","            /** @type {!HTMLInputElement} */ (","                document.getElementById('autocomplete')), {","              types: ['(cities)'],","            });","        ","","        autocomplete.addListener('place_changed', onPlaceChanged);","","        // Add a DOM event listener to react when the user selects a country.","        document.getElementById('usState').addEventListener(","            'change', setAutocompleteusState);","      }","","      // When the user selects a city, get the place details for the city and","      // zoom the map in on the city.","      function onPlaceChanged() {","        var place = autocomplete.getPlace();","        if (place.geometry) {","          map.panTo(place.geometry.location);","          map.setZoom(12);","          search();","        } else {","          document.getElementById('autocomplete').placeholder = 'search';","        }","      }","      ","      function search() {","        var search = {","          bounds: map.getBounds(),","          types: ['lodging']","        };","","        places.nearbySearch(search, function(results, status) {","          if (status === google.maps.places.PlacesServiceStatus.OK) {","            clearResults();","            clearMarkers();","            // Create a marker for each hotel found, and","            // assign a letter of the alphabetic to each marker icon.","            for (var i = 0; i < results.length; i++) {","              var markerLetter = String.fromCharCode('A'.charCodeAt(0) + (i % 26));","              var markerIcon = MARKER_PATH + markerLetter + '.png';","              // Use marker animation to drop the icons incrementally on the map.","              markers[i] = new google.maps.Marker({","                position: results[i].geometry.location,","                animation: google.maps.Animation.DROP,","                icon: markerIcon","              });","              // If the user clicks a hotel marker, show the details of that hotel","              // in an info window.","              markers[i].placeResult = results[i];","              google.maps.event.addListener(markers[i], 'click', showInfoWindow);","              setTimeout(dropMarker(i), i * 100);","              addResult(results[i], i);","            }","          }","        });","      }","","  ","","      // Set the country restriction based on user input.","      // Also center and zoom the map on the given country.","      function setAutocompleteusState() {","        var usState = document.getElementById('usState').value;","        if (usState == 'all') {","          autocomplete.setComponentRestrictions({'usState': []});","          map.setCenter({lat: 15, lng: 0});","          map.setZoom(2);","        } else {","          autocomplete.setComponentRestrictions({'usState': usState});","          map.setCenter(state[usState].center);","          map.setZoom(state[usState].zoom);","        }","        clearResults();","        clearMarkers();","      }"],"id":35}],[{"start":{"row":0,"column":0},"end":{"row":128,"column":7},"action":"remove","lines":[" var map, places, infoWindow;","      var markers = [];","      var autocomplete;","      var countryRestrict = {'usState': 'us'};","      ","     ","","      var state = {","        'az': {","          center: {lat: 34.0489, lng: -111.0937},","          zoom: 5","        },","        'ca': {","          center: {lat: 36.7783, lng: -119.4179},","          zoom: 5","        },","        'il': {","          center: {lat: 40.6331, lng: -89.3985},","          zoom: 5","        },","        'mi': {","          center: {lat: 37.9643, lng: -91.8318},","          zoom: 5","        },","        'nm': {","          center: {lat: 31.5199, lng: -105.8701},","          zoom: 5","        },","        'ol': {","          center: {lat: 35.0078, lng: -97.0929},","          zoom: 5","        },","        'tx': {","          center: {lat: 31.9686, lng: -99.9018},","          zoom: 5","        },","        'us': {","          center: {lat: 37.1, lng: -95.7},","          zoom: 3","        },","      };","      ","","","      function initMap() {","        map = new google.maps.Map(document.getElementById('map'), {","          zoom: state['us'].zoom,","          center: state['us'].center,","        });","        ","          // Create the autocomplete object and associate it with the UI input control.","        // Restrict the search to the default country, and to place type \"cities\".","        autocomplete = new google.maps.places.Autocomplete(","            /** @type {!HTMLInputElement} */ (","                document.getElementById('autocomplete')), {","              types: ['(cities)'],","            });","        ","","        autocomplete.addListener('place_changed', onPlaceChanged);","","        // Add a DOM event listener to react when the user selects a country.","        document.getElementById('usState').addEventListener(","            'change', setAutocompleteusState);","      }","","      // When the user selects a city, get the place details for the city and","      // zoom the map in on the city.","      function onPlaceChanged() {","        var place = autocomplete.getPlace();","        if (place.geometry) {","          map.panTo(place.geometry.location);","          map.setZoom(12);","          search();","        } else {","          document.getElementById('autocomplete').placeholder = 'search';","        }","      }","      ","      function search() {","        var search = {","          bounds: map.getBounds(),","          types: ['lodging']","        };","","        places.nearbySearch(search, function(results, status) {","          if (status === google.maps.places.PlacesServiceStatus.OK) {","            clearResults();","            clearMarkers();","            // Create a marker for each hotel found, and","            // assign a letter of the alphabetic to each marker icon.","            for (var i = 0; i < results.length; i++) {","              var markerLetter = String.fromCharCode('A'.charCodeAt(0) + (i % 26));","              var markerIcon = MARKER_PATH + markerLetter + '.png';","              // Use marker animation to drop the icons incrementally on the map.","              markers[i] = new google.maps.Marker({","                position: results[i].geometry.location,","                animation: google.maps.Animation.DROP,","                icon: markerIcon","              });","              // If the user clicks a hotel marker, show the details of that hotel","              // in an info window.","              markers[i].placeResult = results[i];","              google.maps.event.addListener(markers[i], 'click', showInfoWindow);","              setTimeout(dropMarker(i), i * 100);","              addResult(results[i], i);","            }","          }","        });","      }","","  ","","      // Set the country restriction based on user input.","      // Also center and zoom the map on the given country.","      function setAutocompleteusState() {","        var usState = document.getElementById('usState').value;","        if (usState == 'all') {","          autocomplete.setComponentRestrictions({'usState': []});","          map.setCenter({lat: 15, lng: 0});","          map.setZoom(2);","        } else {","          autocomplete.setComponentRestrictions({'usState': usState});","          map.setCenter(state[usState].center);","          map.setZoom(state[usState].zoom);","        }","        clearResults();","        clearMarkers();","      }"],"id":36}],[{"start":{"row":0,"column":0},"end":{"row":167,"column":1},"action":"insert","lines":["//Global Variables---------------------------------","var map;","var infoWindow;","var placesService;","var markers = [];","var ireland = { lat: 53.2, lng: -9.0 };","var autocomplete;","var placeType;","","","//Initialize Map------------------------------------","function initMap() {","  map = new google.maps.Map(document.getElementById('map'), {","    center: ireland,","    zoom: 2","  });","  // Info window with place details","  infoWindow = new google.maps.InfoWindow({","    content: document.getElementById('info-content')","  });","","","  autocomplete = new google.maps.places.Autocomplete(","    (","      document.getElementById('searchPlace')), {","      types: ['(cities)'],","    });","","  autocomplete.addListener('place_changed', onPlaceChanged);","","  //Place search---------------------------------------","  function onPlaceChanged() {","    var place = autocomplete.getPlace();","    if (place.geometry) {","      map.panTo(place.geometry.location);","      map.setZoom(13);","    }","    else {","      document.getElementById('searchPlace').placeholder = 'Where are you going?';","    }","  }","  //Nearby place search by click---------------------------","  placesService = new google.maps.places.PlacesService(map);","  ","  document.getElementById(\"accommodation\").addEventListener(\"click\", function() {","    placeType = ['lodging'];","    clearMarkers();","    searchPlaces();","  });","  document.getElementById(\"restaurant\").addEventListener(\"click\", function() {","    placeType = ['restaurant', 'bar'];","    clearMarkers();","    searchPlaces();","  });","  document.getElementById(\"attraction\").addEventListener(\"click\", function() {","    placeType = ['night_club', 'zoo', 'museum', 'amusement_park', 'park'];","    clearMarkers();","    searchPlaces();","  });","  document.getElementById(\"store\").addEventListener(\"click\", function() {","    placeType = ['store', 'shopping_mall'];","    clearMarkers();","    searchPlaces();","  });","","  //Sets the info window in the place details html element------------------------------","  infoWindow = new google.maps.InfoWindow({","    content: document.getElementById('info-content')","  });","}","//Search places---------------------------------------------------------","function searchPlaces() {","  var search = {","    bounds: map.getBounds(),","    types: placeType","  };","  placesService.nearbySearch(search, function(results, status) {","    if (status === google.maps.places.PlacesServiceStatus.OK) {","      //Clear markers---------------------------------------------------","      clearMarkers();","      //Create markers----------------------------------------------------","      for (var i = 0; i < results.length; i++) {","        markers[i] = new google.maps.Marker({","          position: results[i].geometry.location,","          animation: google.maps.Animation.DROP","        });","        markers[i].placeResult = results[i];","        google.maps.event.addListener(markers[i], 'click', showInfoWindow); //Show info window when user clicks on a marker---","        //google.maps.event.addListener(markers[i], 'click', showInfoWindow); Show info window when user clicks on a marker---","        setTimeout(dropMarker(i), i * 100);","      }","","    }","  });","}","//Add markers to map----------------------------","function dropMarker(i) {","  return function() {","    markers[i].setMap(map);","  };","}","","//Clear markers---------------------------------","function clearMarkers() {","  for (var i = 0; i < markers.length; i++) {","    if (markers[i]) {","      markers[i].setMap(null);","    }","  }","  markers = [];","}","// Get the place details for a place. Show the information in an info window,","// anchored on the marker for the place that the user selected.","function showInfoWindow() {","  var marker = this;","  placesService.getDetails({ placeId: marker.placeResult.place_id },","    function(place, status) {","      if (status !== google.maps.places.PlacesServiceStatus.OK) {","        return;","      }","      infoWindow.open(map, marker);","      renderPlaceDetails(place);","    });","}","","// Load the place information into the HTML elements used by the info window.","function renderPlaceDetails(place) {","  document.getElementById('place-name').textContent = place.name;","  document.getElementById('place-address').textContent = place.formatted_address;","","  if (place.formatted_phone_number) {","    document.getElementById('place-phoneNumber').textContent = place.formatted_phone_number;","  }","  else {","    document.getElementById('place-phoneNumber').textContent = 'Not available';","  }"," ","","  // Assign a five-star rating to the place, using a black star ('&#10029;')","  // to indicate the rating the place has earned, and a white star ('&#10025;')","  // for the rating points not achieved.","  if (place.rating) {","    var ratingHtml = '';","    for (var i = 0; i < 5; i++) {","      if (place.rating < (i + 0.5)) {","        ratingHtml += '&#10025;';","      }","      else {","        ratingHtml += '&#10029;';","      }","      document.getElementById('place-rating-wrapper').style.display = '';","      document.getElementById('place-rating').innerHTML = ratingHtml;","    }","  }","  else {","    document.getElementById('place-rating-wrapper').style.display = 'none';","  }","","  //This creates a link to the website-------","","  if (place.website) {","    document.getElementById('place-website-wrapper').style.display = '';","    document.getElementById('place-website').innerHTML = '<a class= \"btn btn-red\" href=\"' + place.website + '\" target=\"_blank\">' + 'Website ' + '</a>';","  }","  else {","    document.getElementById('place-website-wrapper').style.display = 'none';","  }","}"],"id":37}]]},"ace":{"folds":[],"scrolltop":1934.5,"scrollleft":0,"selection":{"start":{"row":167,"column":1},"end":{"row":167,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":146,"state":"no_regex","mode":"ace/mode/javascript"}},"timestamp":1575139030583,"hash":"b0553aec397abfbd910d5fb054b759974470bd7e"}